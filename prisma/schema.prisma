generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  passwordHash  String    @map("password_hash")
  role          UserRole
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  assignedTickets Ticket[] @relation("AssignedTickets")
  comments      Comment[]

  @@map("users")
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  address   String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  tickets   Ticket[]

  @@map("clients")
}

model Ticket {
  id           String    @id @default(uuid())
  title        String
  description  String?
  status       TicketStatus
  priority     TicketPriority
  clientId     String    @map("client_id")
  client       Client    @relation(fields: [clientId], references: [id])
  assignedToId String?   @map("assigned_to_id")
  assignedTo   User?     @relation("AssignedTickets", fields: [assignedToId], references: [id])
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  comments     Comment[]

  @@map("tickets")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  ticketId  String   @map("ticket_id")
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comments")
}

enum UserRole {
  admin
  atendente
}

enum TicketStatus {
  open
  in_progress
  resolved
  closed
}

enum TicketPriority {
  low
  medium
  high
} 